{"version":3,"sources":["components/Header/DarkModeButton.js","components/Header/Header.js","components/Bio/BioWrapper.js","components/Bio/Bio.js","components/Tabs/Option.js","components/Tabs/Tabs.js","components/MainRoute.js","utility.js","components/Posts/PostSummary.js","components/Posts/Post.js","components/Posts/HashTag.js","components/Posts/PostImage.js","components/Posts/PostDetail.js","components/Posts/Gallery.js","components/Project.js","components/Experience.js","components/Other.js","components/Courses.js","components/Tags.js","components/App.js","theme.js","index.js"],"names":["DarkModeButton","useColorMode","colorMode","toggleColorMode","buttonBackground","useColorModeValue","iconBackground","isEnabled","label","className","htmlFor","style","background","color","id","onClick","Header","maincolor","bg","w","maxW","mx","p","to","textDecoration","fontSize","fontFamily","h","window","alert","justify","href","alt","BioWrapper","children","spacing","Bio","moment","require","bday","today","startOf","daysOld","duration","diff","asDays","m","borderRadius","boxSize","src","process","align","as","target","size","columns","fontWeight","Option","text","currentPage","useLocation","pathname","borderTop","borderColor","component","Tabs","mb","MainRoute","Component","rest","audience","render","props","PRESENT","initializePostObj","obj","folder","forEach","post","liked","imgs","url","i","self","compareDates","a","b","a_date","endDate","startDate","b_date","a_moment_object","b_moment_object","isBefore","PostSummary","hovering","title","img","parse","format","maxH","Post","content","action","useState","setHovering","ratio","height","onMouseEnter","onMouseLeave","whiteSpace","wordWrap","HashTag","replace","toLowerCase","display","PostImage","imagesObj","onDoubleClick","map","original","console","log","items","showBullets","onErrorImageURL","showPlayButton","showFullscreenButton","PostDetail","subtitle","description","tags","setLiked","backcolor","toggleLiked","flex","width","justifyContent","mt","textAlign","px","tag","Provider","value","d","marginTop","padding","textTransform","postNotFound","date","updated","Gallery","contents","useDisclosure","isOpen","onOpen","onClose","currentPost","setCurrentPost","clickPost","scrollBehavior","isCentered","projects","Project","sort","experience","Other","images","React","Tags","tagname","useParams","App","path","exact","Experience","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.04c9c332.chunk.js","sourcesContent":["import React from \"react\";\nimport { useColorMode, useColorModeValue, Tooltip } from \"@chakra-ui/react\";\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\nimport \"./DarkModeButton.css\";\n\nexport default function DarkModeButton() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const buttonBackground = useColorModeValue(\"black\", \"white\");\n  const iconBackground = useColorModeValue(\"white\", \"black\");\n\n  const isEnabled = colorMode === \"dark\";\n  return (\n    <Tooltip label=\"Toggle Dark Mode\">\n      <label className=\"toggle-wrapper\" htmlFor=\"toggle\">\n        <div\n          className={`toggle ${isEnabled ? \"enabled\" : \"disabled\"}`}\n          style={{ background: buttonBackground }}\n        >\n          <div className=\"icons\">\n            <MoonIcon color={iconBackground} />\n            <SunIcon color={iconBackground} />\n          </div>\n          <input id=\"toggle\" onClick={toggleColorMode} />\n        </div>\n      </label>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Heading,\n  Container,\n  HStack,\n  Center,\n  Flex,\n  Spacer,\n  Box,\n  useColorModeValue,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { EmailIcon } from \"@chakra-ui/icons\";\nimport DarkModeButton from \"./DarkModeButton\";\n\nexport default function Header() {\n  const title = {\n    fontFamily: \"Brush Script MT, Comic Sans\",\n  };\n\n  const maincolor = useColorModeValue(\"white\", \"rgb(23, 29, 42)\");\n\n\n  return (\n    <Container bg={maincolor} w=\"100%\" maxW=\"100%\">\n      <Container maxW=\"62em\" mx=\"auto\" p={1}>\n        <Flex>\n          <Box p=\"2\" w=\"100%\">\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n              <Heading fontSize={[\"lg\", \"xl\", \"2xl\", \"3xl\"]} style={title}>\n                Tomistagram\n              </Heading>\n            </Link>\n          </Box>\n          <Spacer />\n          <Box w=\"100%\">\n            <Center h=\"100%\">\n              <Heading\n                fontSize={[\"xl\", \"2xl\", \"3xl\"]}\n                onClick={() => window.alert(\"Work in progress. Coming soon\")}\n              >\n                Search Bar\n              </Heading>\n            </Center>\n          </Box>\n          <Spacer />\n          <Box w=\"100%\">\n            <HStack h=\"100%\" justify=\"flex-end\">\n              <Tooltip label=\"qinx@umich.edu\">\n                <a href=\"mailto:qinx@umich.edu\">\n                  <EmailIcon alt=\"email icon\" w={10} h=\"25px\" />\n                </a>\n              </Tooltip>\n              <DarkModeButton />\n            </HStack>\n          </Box>\n        </Flex>\n      </Container>\n    </Container>\n  );\n}\n","import React from 'react';\nimport './Orientation.css';\nimport { HStack, VStack } from \"@chakra-ui/react\";\n\nexport default function BioWrapper({children}) {\n    return (\n        <>\n        <HStack spacing={[8, 12, 16, 24]} w=\"full\" id=\"hstack\">\n            {children}\n        </HStack>\n        <VStack spacing={[4, 6, 8, 12]} w=\"full\" id=\"vstack\">\n            {children}\n        </VStack>\n        </>\n    )\n}\n","import React from \"react\";\nimport {\n  Image,\n  Container,\n  Center,\n  Button,\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport BioWrapper from \"./BioWrapper\";\n\nexport default function Bio() {\n  let moment = require(\"moment\");\n  const bday = moment(\"2001-12-30\", \"YYYY-MM-DD\");\n  const today = moment().startOf(\"day\");\n\n  const daysOld = moment.duration(today.diff(bday)).asDays();\n\n  return (\n    <Container m={[2, 4, 6, 8]} w=\"full\" maxW=\"100%\">\n      <Flex>\n        <BioWrapper>\n          <Image\n            borderRadius=\"full\"\n            boxSize={[100, 125, 150, 200]}\n            src={process.env.PUBLIC_URL + \"/pfp.jpg\"}\n            alt=\"Profile Picture\"\n          />\n          <VStack w=\"full\" align=\"flex-start\">\n            <HStack spacing={[3, 4, 5]}>\n              <Text as=\"span\" fontSize=\"2xl\">\n                Xiangyu (Tom) Qin\n              </Text>\n              <Center>\n              <Link to=\"/resume.pdf\" target=\"_blank\">\n                <Button borderRadius=\"sm\" bg=\"blue.500\" color=\"white\" size=\"xs\">\n                  Resume\n                </Button>\n                </Link>\n              </Center>\n            </HStack>\n            <SimpleGrid\n              w=\"full\"\n              maxW=\"30em\"\n              columns={[1, null, 3]}\n              spacing={[1, 2, 3]}\n            >\n              <Text as=\"span\">\n                <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n                  {daysOld}\n                </Text>{\" \"}\n                days old\n              </Text>\n              <Text as=\"span\">\n                <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n                  57\n                </Text>{\" \"}\n                animes watched\n              </Text>\n            </SimpleGrid>\n            <Text>\n              I am a third-year student in Computer Science at the University of\n              Michigan. Outside of work and academics, you'll likely not find me\n              not doing any of Swimming, working on Jigsaw Puzzles, Cooking, and\n              playing Super Smash Bros. Or, if we apply De Morgan's, you will\n              probably find me Swimming &or; Jigsaw Puzzle &or; Cooking &or;\n              Super Smash Bros.\n            </Text>\n            <Text>\n              My current favorite tech stack is Chakra UI. I mean, how freakin\n              cool is it to be able to\n              <Text as=\"i\"> import Chakra. </Text>\n              (and of course its features as well, but that will be too long for\n              my short bio so I'll make a post under \"others\") And yes, this\n              website is styled using Chakra :)\n            </Text>\n            <Text>\n            TODO 1: Fill in description for posts <br />\n            There's 3 more TODOs left for this page. Can you find all three of them?\n            </Text>\n          </VStack>\n        </BioWrapper>\n      </Flex>\n    </Container>\n  );\n}\n//and of course its components like HStack and VStack that gives a mobile dev styling feel and the highly customizable responsive design it provides.\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/react\";\nimport { useLocation } from 'react-router-dom'\n\nexport default function Option({to, text}) {\n    const location = useLocation();\n    \n    const currentPage = location.pathname === to;\n\n    return (\n        <>\n        {currentPage ? (\n            <Box borderTop='1px' borderColor='black'>\n                <Link to={to}>\n                    <Box component=\"span\">{text}</Box>\n                </Link>\n            </Box>\n        ) : (\n            <Box color=\"gray.500\">\n                <Link to={to}>\n                    <Box component=\"span\">{text}</Box>\n                </Link>\n            </Box>\n        )}\n        </>\n    )\n}\n","import React from \"react\";\nimport { Container, Center, HStack } from \"@chakra-ui/react\";\nimport Option from \"./Option\";\n\nexport default function Tabs() {\n  return (\n    <Container maxW=\"44em\" mb={3}>\n      <Center>\n        <HStack spacing={12}>\n          <Option to=\"/\" text=\"Experience\" />\n          <Option to=\"/project\" text=\"Project\" />\n          {/* <Option to=\"/courses\" text=\"Courses\" /> */}\n          <Option to=\"/other\" text=\"Other\" />\n        </HStack>\n      </Center>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Container } from \"@chakra-ui/react\";\nimport Bio from \"./Bio/Bio\";\nimport Tabs from \"./Tabs/Tabs\";\n\nfunction MainRoute({ component: Component, audience, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Container maxW=\"62em\" mx=\"auto\">\n          <Bio />\n          <hr />\n          <Tabs />\n          <div id=\"posts\">\n            <Component {...props} />\n          </div>\n        </Container>\n      )}\n    />\n  );\n}\n\nexport default MainRoute;\n","export const PRESENT = \"Present\";\n\nexport function initializePostObj(obj, folder) {\n  obj.forEach((post) => {\n    post.liked = false;\n    post.imgs.forEach(\n      (url, i, self) => (self[i] = process.env.PUBLIC_URL + folder + url)\n    );\n  });\n}\n\nexport function compareDates(a, b) {\n  let moment = require(\"moment\");\n  let a_date = a.endDate === \"\" ? a.startDate : a.endDate;\n  let b_date = b.endDate === \"\" ? b.startDate : b.endDate;\n\n  if (a_date === PRESENT) {\n    if (b_date === PRESENT) {\n      a_date = a.startDate;\n      b_date = b.startDate;\n    } else {\n      return false;\n    }\n  } else if (b_date === PRESENT && a_date !== PRESENT) {\n    return true;\n  }\n\n  const a_moment_object = moment(a_date, \"MM-YYYY\");\n  const b_moment_object = moment(b_date, \"MM-YYYY\");\n\n  return moment(a_moment_object).isBefore(b_moment_object, \"month\");\n}\n\nexport function onGoing() {\n  let moment = require(\"moment\");\n  return moment().format(\"MM-YYYY\");\n}\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { Image, VStack, Text } from \"@chakra-ui/react\";\nimport { PRESENT } from \"../../utility\";\n\nexport default function PostSummary({\n  hovering,\n  title,\n  startDate,\n  endDate,\n  img,\n}) {\n  if (!hovering) {\n    return <Image m={0} src={img} alt={`Image for post ${title}`} w=\"100%\" maxH=\"100%\"/>;\n  }\n  return (\n    <VStack>\n      <Text fontSize=\"xl\" maxW=\"100%\">\n        {title}\n      </Text>\n      <Text fontSize=\"xl\" maxW=\"100%\">\n        <Moment parse=\"MM-YYYY\" format=\"MMM YYYY\">\n          {startDate}\n        </Moment>\n        {endDate === \"\" ? null : (\n          <>\n            <span> ~ </span>\n            {endDate === PRESENT ? (\n              PRESENT\n            ) : (\n              <Moment parse=\"MM-YYYY\" format=\"MMM YYYY\">\n                {endDate}\n              </Moment>\n            )}\n          </>\n        )}\n      </Text>\n    </VStack>\n  );\n}\n","import React, { useState } from \"react\";\nimport { AspectRatio, Button } from \"@chakra-ui/react\";\n\nimport PostSummary from \"./PostSummary\";\n\nexport default function Post({ content, action }) {\n  const [hovering, setHovering] = useState(false);\n  const onHover = () => {\n    setHovering(true);\n  };\n  const onLeave = () => {\n    setHovering(false);\n  };\n  return (\n    <AspectRatio ratio={1}>\n      <Button\n        p={0}\n        height=\"80px\"\n        onClick={() => action(content)}\n        onMouseEnter={onHover}\n        onMouseLeave={onLeave}\n        style={{\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        <PostSummary\n          hovering={hovering}\n          title={content.title}\n          startDate={content.startDate}\n          endDate={content.endDate}\n          img={content.imgs[0]}\n        />\n      </Button>\n    </AspectRatio>\n  );\n}\n","import React from \"react\";\nimport { Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HashTag({ text }) {\n  text = text.replace(\" \", \"_\").toLowerCase();\n  const root = process.env.PUBLIC_URL;\n\n  const color = useColorModeValue(\"rgb(0, 55, 107)\", \"rgb(118, 176, 231)\");\n  return (\n    <Link to={`/tags/${text}`}>\n      <Text\n        mx={1}\n        fontSize=\"sm\"\n        color={color}\n        style={{ display: \"inline-block\" }}\n      >\n        #{text}\n      </Text>\n    </Link>\n  );\n}\n","import React from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport { Box } from \"@chakra-ui/react\";\n\nexport default function PostImage({imgs, onDoubleClick}) {\n    const imagesObj = imgs.map((img) => {\n        return {\n            original: img,\n        }\n    })\n    console.log(imagesObj);\n    const settings = {\n        showBullets: true,\n        onErrorImageURL: process.env.PUBLIC_URL + \"/notfound.jpeg\",\n        showPlayButton: false,\n        showFullscreenButton: false,\n    }\n    console.log(imagesObj)\n    return (\n        <Box id=\"gallery wrappere\" w=\"100%\">\n            <ImageGallery items={imagesObj} {...settings}/>\n        </Box>\n    )\n}","import React, { useState } from \"react\";\nimport Moment from \"react-moment\";\nimport {\n  Box,\n  Center,\n  Flex,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalContent,\n  ModalBody,\n  VStack,\n  Text,\n  Heading,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { IconContext } from \"react-icons\";\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\nimport { FiSend } from \"react-icons/fi\";\nimport { onGoing, PRESENT } from \"../../utility\";\nimport HashTag from \"./HashTag\";\nimport PostImage from \"./PostImage\";\n\nexport default function PostDetail({ content }) {\n  const { title, subtitle, description, imgs, startDate, endDate, tags } = content;\n  const [liked, setLiked] = useState(content.liked);\n\n  const color = useColorModeValue(\"black\", \"white\");\n  const backcolor = useColorModeValue(\"gray.50\", \"rgb(26, 32, 44)\");\n\n  const toggleLiked = () => {\n    setLiked(!liked);\n    content.liked = !liked;\n  };\n\n  const doubleClickLike = () => {\n    setLiked(true);\n    content.liked = true;\n  };\n\n  const shareButton = () => {\n    window.alert(`ooops. this is embarrasing...\n    I'm still thinking about what feature to do with the share button`);\n  };\n\n  const heart_color = \"237,73,86\";\n  return (\n    <>\n      <ModalOverlay />\n      <ModalContent m={15} height=\"80vh\">\n        <Box h=\"100%\" bg=\"black\">\n          <Flex h=\"100%\" w=\"100%\">\n            <Center flex=\"1\" maxH=\"100%\" maxW=\"100%\" w=\"100%\">\n              <PostImage imgs={imgs} onDoubleClick={() => doubleClickLike()} />\n            </Center>\n            <Box h=\"100%\" maxW=\"500px\" width=\"45%\" bg={backcolor}>\n              <ModalCloseButton />\n              <VStack h=\"100%\">\n                <Box width=\"100%\">\n                  <Heading\n                    as=\"h4\"\n                    size=\"md\"\n                    justifyContent=\"flex-start\"\n                    mt={3}\n                    mx={4}\n                  >\n                    {title}\n                  </Heading>\n                  <Heading\n                    as=\"h4\"\n                    size=\"sm\"\n                    justifyContent=\"flex-start\"\n                    mb={1}\n                    mx={6}\n                  >\n                    {subtitle}\n                  </Heading>\n                  <hr />\n                </Box>\n                <ModalBody w=\"100%\" textAlign={\"left\"}>\n                  {description} word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word\n                </ModalBody>\n                <Box px={2} w=\"100%\" justifyContent=\"flex-start\">\n                  {tags.map((tag, i) => (\n                    <HashTag text={tag} key={i} />\n                  ))}\n                </Box>\n                <Box h=\"90px\" w=\"100%\">\n                  <hr />\n                  <VStack w=\"100%\" px={2}>\n                    <Box m={0} w=\"100%\" justifyContent=\"flex-start\">\n                      <IconContext.Provider\n                        value={{\n                          color: liked ? `rgb(${heart_color})` : color,\n                          className: \"global-class-name\",\n                          size: \"22px\",\n                        }}\n                      >\n                        <Box d=\"inline-block\" m={1} mb={0}>\n                          {liked ? (\n                            <FaHeart onClick={() => toggleLiked()} />\n                          ) : (\n                            <FaRegHeart onClick={() => toggleLiked()} />\n                          )}\n                        </Box>\n                      </IconContext.Provider>\n                      <IconContext.Provider\n                        value={{\n                          className: \"global-class-name\",\n                          size: \"22px\",\n                        }}\n                      >\n                        <Box d=\"inline-block\" m={1} mb={0}>\n                          <FiSend onClick={() => shareButton()} />\n                        </Box>\n                      </IconContext.Provider>\n                    </Box>\n                    <Text\n                      fontSize=\"sm\"\n                      w=\"100%\"\n                      justifyContent=\"flex-start\"\n                      style={{\n                        fontWeight: \"bold\",\n                        marginTop: \"0px\",\n                        padding: \"0px 5px\",\n                      }}\n                    >\n                      &#8501; {liked ? \" + 1\" : \"\"} likes\n                    </Text>\n                    <Text\n                      fontSize=\"xs\"\n                      w=\"100%\"\n                      justifyContent=\"flex-start\"\n                      style={{\n                        marginTop: \"-2px\",\n                        textTransform: \"uppercase\",\n                        fontFamily: \"system-ui, Courier New\",\n                        color: \"#8E8E8E\",\n                        padding: \"0px 5px\",\n                      }}\n                    >\n                      <Moment parse=\"MM-YYYY\" format=\"MMMM YYYY\">\n                        {startDate}\n                      </Moment>\n                      {endDate === \"\" ? null : (\n                        <>\n                          <span> (Last Updated </span>\n                          <Moment parse=\"MM-YYYY\" format=\"MMMM YYYY\">\n                            {endDate === PRESENT ? onGoing() : endDate}\n                          </Moment>\n                          )\n                        </>\n                      )}\n                    </Text>\n                  </VStack>\n                </Box>\n              </VStack>\n            </Box>\n          </Flex>\n        </Box>\n      </ModalContent>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SimpleGrid, Modal, useDisclosure } from \"@chakra-ui/react\";\nimport Post from \"./Post\";\nimport PostDetail from \"./PostDetail\";\n\nconst postNotFound = {\n  title: \"Post not found\",\n  description: \"Something wrong happened :(\",\n  img: \"/notfound.jpeg\",\n  date: \"12-2001\",\n  updated: false,\n};\n\nexport default function Gallery({ contents }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [currentPost, setCurrentPost] = useState(postNotFound);\n\n  const clickPost = (content) => {\n    setCurrentPost(content);\n    onOpen();\n  };\n  return (\n    <>\n      <Modal\n        onClose={onClose}\n        size={\"5xl\"}\n        isOpen={isOpen}\n        scrollBehavior=\"inside\"\n        isCentered\n      >\n        <PostDetail content={currentPost} />\n      </Modal>\n      <SimpleGrid columns={[2, null, 3]} spacing=\"5%\">\n        {contents.map((content, i) => (\n          <Post content={content} action={clickPost} key={i} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, PRESENT, initializePostObj } from \"../utility\";\n\nconst projects = [\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    imgs: [\"sudoku.png\"],\n    startDate: \"07-2020\",\n    endDate: \"\",\n    tags: [\"Javascript\", \"HTML/CSS\", \"Backtracking\", \"Bit Manupulation\"],\n  },\n  {\n    title: \"Game Website\",\n    description: \"its a game website\",\n    imgs: [\"spaceinvader.png\", \"flappyabe.png\", \"tetris.png\"],\n    startDate: \"08-2020\",\n    endDate: \"\",\n    tags: [\"Javascript\", \"html/css\", \"php\"],\n  },\n  {\n    title: \"Table Recognizer\",\n    description: \"its a table recognizer\",\n    imgs: [\"tablegrid.png\", \"tablecell.png\"],\n    startDate: \"03-2021\",\n    endDate: PRESENT,\n    tags: [\n      \"Python\",\n      \"Opencv\",\n      \"Computer Vision\",\n      \"Machine Learning\",\n      \"Swimming?\"\n    ],\n  },\n  {\n    title: \"Piazza Post Classifier\",\n    description: \"its a sudoku website <- lol its not  \",\n    imgs: [\"piazza.jpeg\"],\n    startDate: \"03-2020\",\n    endDate: \"\",\n    tags: [\"C++\", \"Machine Learning\"],\n  },\n  {\n    title: \"Dog Breed Classification\",\n    description: \"Classify dog breeds. Transfer learning..... 74% accuracy and 0.863 AUROC todo\",\n    imgs: [\"dogs.png\"],\n    startDate: \"04-2021\",\n    endDate: \"\",\n    tags: [\"CNN\", \"Machine Learning\", \"Transfer Learning\", \"\"],\n  },\n];\n\nprojects.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\ninitializePostObj(projects, \"/ProjectImg/\");\n\nexport default function Project() {\n  return <Gallery contents={projects} />;\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, PRESENT, initializePostObj } from \"../utility\";\n\nconst experience = [\n  {\n    title: \"University of Michigan\",\n    subtitle: \"EECS 203 (Discrete Math) Teaching Assistant\",\n    description: \"aa\",\n    imgs: [\"m.png\"],\n    startDate: \"07-2020\",\n    endDate: PRESENT,\n    tags: [\"TA\", \"Discrete Math\", \"Logic\"],\n  },\n  {\n    title: \"University of Michigan\",\n    subtitle: \"Research Assistant\",\n    description: \"its a game website\",\n    imgs: [\"m.png\"],\n    startDate: \"12-2021\",\n    endDate: PRESENT,\n    tags: [\"Research\", \"Python\", \"Topic Modelling\"],\n  },\n  {\n    title: \"PID Inc.\",\n    subtitle: \"pid.jpeg\",\n    description: \"its a sudoku website\",\n    imgs: [\"pid.jpeg\"],\n    startDate: \"09-2020\",\n    endDate: \"08-2021\",\n    tags: [\n      \"Python\",\n      \"Opencv\",\n      \"Computer Vision\",\n      \"Machine Learning\",\n      \"Swimming?\"\n    ],\n  },\n  {\n    title: \"Cookpad\",\n    subtitle: \"cookpad.webp\",\n    description: \"its a sudoku website\",\n    imgs: [\"cookpad.jpeg\"],\n    startDate: \"08-2021\",\n    endDate: \"08-2021\",\n    tags: [\"Javascript\", \"HTML/CSS\", \"Next.js\", \"Ruby\", \"Rails\"],\n  },\n];\n\nexperience.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\ninitializePostObj(experience, \"/ExperienceImg/\");\n\nexport default function Project() {\n  return <Gallery contents={experience} />;\n}\n","import React from \"react\";\n\nexport default function Other() {\n  return <div>Other</div>;\n}\n","import \"react-image-gallery/styles/css/image-gallery.css\";\nimport React, { Component } from 'react';\nimport ImageGallery from 'react-image-gallery';\n\nconst images = [\n  {\n    original: 'https://picsum.photos/id/1018/1000/600/',\n  },\n  {\n    original: 'https://picsum.photos/id/1015/1000/600/',\n  },\n  {\n    original: 'https://picsum.photos/id/1019/1000/600/',\n  },\n];\n\nexport default class MyGallery extends React.Component {\n  render() {\n    return <ImageGallery items={images} />;\n  }\n}","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Tags() {\n  const { tagname } = useParams();\n  return (\n    <div>\n      Page for {tagname} tag. Coming soon (More precisely, when I finish search\n      bar)\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MainRoute from \"./MainRoute\";\nimport Project from \"./Project\";\nimport Experience from \"./Experience\";\nimport Other from \"./Other\";\nimport Courses from \"./Courses\";\nimport Tags from \"./Tags\";\n\nimport { Container, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction App() {\n  const backcolor = useColorModeValue(\"gray.50\", \"rgb(26, 32, 44)\");\n  return (\n    <>\n      <Header />\n      <Container bg={backcolor} maxW=\"100%\" mx=\"auto\" p={0}>\n        <hr />\n        <Switch>\n          <MainRoute path={\"/\"} exact component={Experience} />\n          <MainRoute path={\"/project\"} exact component={Project} />\n          {/* <MainRoute path={`${root}/courses`} exact component={Courses} /> */}\n          <MainRoute path={\"/other\"} exact component={Other} />\n          <Route path={\"/tags/:tagname\"} component={Tags} />\n        </Switch>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n};\n\n// #FFFAFA\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ChakraProvider>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}