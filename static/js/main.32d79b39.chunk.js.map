{"version":3,"sources":["components/Header/DarkModeButton.js","components/Header/Header.js","components/Summary/SummaryWrapper.js","components/Summary/Summary.js","Constants.js","components/Posts/PostSummary.js","components/Posts/Post.js","Utility.js","components/Posts/HashTag.js","components/Posts/PostImage.js","components/Posts/PostDetail.js","components/Posts/Gallery.js","components/Project.js","components/Experience.js","components/Other.js","components/Summary/Bio.js","components/Tabs/Option.js","components/Tabs/Tabs.js","components/MainRoute.js","components/Courses.js","components/Summary/TagSummary.js","components/Tags.js","components/App.js","theme.js","index.js"],"names":["DarkModeButton","colorMode","toggleColorMode","useColorMode","buttonBackground","useColorModeValue","iconBackground","isEnabled","_jsx","Tooltip","label","children","className","htmlFor","_jsxs","concat","style","background","MoonIcon","color","SunIcon","id","onClick","Header","maincolor","Container","bg","w","maxW","mx","p","Flex","Box","Link","to","textDecoration","Heading","fontSize","fontFamily","Spacer","HStack","h","justify","spacing","AiFillHome","size","href","target","AiFillGithub","EmailIcon","alt","SummaryWrapper","_ref","_Fragment","VStack","Bio","img","m","Image","borderRadius","boxSize","src","PRESENT","PYTHON","JS","REACT","HTML","ML","PostSummary","hovering","title","startDate","endDate","Text","Moment","parse","format","maxH","Post","content","action","setHovering","useState","AspectRatio","ratio","Button","height","onMouseEnter","onHover","onMouseLeave","onLeave","whiteSpace","wordWrap","imgs","initializePostObj","obj","folder","forEach","post","liked","url","i","self","process","tags","tag","replace","toLowerCase","compareDates","a","b","a_priority","priority","b_priority","moment","require","a_date","b_date","a_moment_object","b_moment_object","isSame","isBefore","HashTag","text","display","PostImage","onDoubleClick","imagesObj","map","original","console","log","ImageGallery","items","showBullets","onErrorImageURL","showPlayButton","showFullscreenButton","PostDetail","subtitle","description","setLiked","backcolor","toggleLiked","ModalOverlay","ModalContent","Center","flex","width","ModalCloseButton","as","justifyContent","mt","mb","ModalBody","textAlign","px","IconContext","Provider","value","d","FaHeart","FaRegHeart","FiSend","window","alert","fontWeight","marginTop","padding","textTransform","postNotFound","date","updated","Gallery","contents","isOpen","onOpen","onClose","useDisclosure","currentPost","setCurrentPost","clickPost","Modal","scrollBehavior","isCentered","SimpleGrid","columns","projects","Project","sort","experiences","others","bday","today","startOf","daysOld","Math","round","duration","diff","asDays","numPosts","length","Summary","align","Option","currentPage","useLocation","pathname","borderTop","borderColor","component","Tabs","MainRoute","Component","audience","rest","Route","render","props","React","TagSummary","tagname","Tags","useParams","posts","setPosts","setImg","useEffect","arr","filtered","filter","includes","App","Switch","path","exact","Experience","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","StrictMode","BrowserRouter","basename","ChakraProvider","ColorModeScript","document","getElementById"],"mappings":"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","file":"static/js/main.32d79b39.chunk.js","sourcesContent":["import React from \"react\";\nimport { useColorMode, useColorModeValue, Tooltip } from \"@chakra-ui/react\";\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\nimport \"./DarkModeButton.css\";\n\nexport default function DarkModeButton() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const buttonBackground = useColorModeValue(\"black\", \"white\");\n  const iconBackground = useColorModeValue(\"white\", \"black\");\n\n  const isEnabled = colorMode === \"dark\";\n  return (\n    <Tooltip label=\"Toggle Dark Mode\">\n      <label className=\"toggle-wrapper\" htmlFor=\"toggle\">\n        <div\n          className={`toggle ${isEnabled ? \"enabled\" : \"disabled\"}`}\n          style={{ background: buttonBackground }}\n        >\n          <div className=\"icons\">\n            <MoonIcon color={iconBackground} />\n            <SunIcon color={iconBackground} />\n          </div>\n          <input id=\"toggle\" onClick={toggleColorMode} />\n        </div>\n      </label>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Heading,\n  Container,\n  HStack,\n  Center,\n  Flex,\n  Spacer,\n  Box,\n  useColorModeValue,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { EmailIcon } from \"@chakra-ui/icons\";\nimport DarkModeButton from \"./DarkModeButton\";\nimport { AiFillGithub, AiFillHome } from \"react-icons/ai\";\n\nexport default function Header() {\n  const title = {\n    fontFamily: \"Brush Script MT, Comic Sans\",\n  };\n\n  const maincolor = useColorModeValue(\"white\", \"rgb(23, 29, 42)\");\n\n  return (\n    <Container bg={maincolor} w=\"100%\" maxW=\"100%\">\n      <Container maxW=\"62em\" mx=\"auto\" p={1}>\n        <Flex>\n          <Box p=\"2\" w=\"100%\">\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n              <Heading fontSize={[\"lg\", \"xl\", \"2xl\", \"3xl\"]} style={title}>\n                Tomistagram\n              </Heading>\n            </Link>\n          </Box>\n          <Spacer />\n          {/* <Box w=\"100%\">\n            <Center h=\"100%\">\n              <Heading\n                fontSize={[\"xl\", \"2xl\", \"3xl\"]}\n                onClick={() => window.alert(\"Work in progress. Coming soon\")}\n              >\n                Search Bar\n              </Heading>\n            </Center>\n          </Box>\n          <Spacer /> */}\n          <Box w=\"100%\">\n            <HStack\n              h=\"100%\"\n              justify=\"flex-end\"\n              spacing={[\"8px\", \"10px\", \"12px\"]}\n            >\n              <Tooltip label=\"Home\">\n                <Link to=\"/\">\n                  <AiFillHome size=\"25px\" />\n                </Link>\n              </Tooltip>\n              <Tooltip label=\"Github\">\n                <a href=\"https://github.com/tommy2022\" target=\"_blank\">\n                  <AiFillGithub size=\"25px\" />\n                </a>\n              </Tooltip>\n              <Tooltip label=\"qinx@umich.edu\">\n                <a href=\"mailto:qinx@umich.edu\">\n                  <EmailIcon alt=\"email icon\" w={10} h=\"25px\" />\n                </a>\n              </Tooltip>\n              <DarkModeButton />\n            </HStack>\n          </Box>\n        </Flex>\n      </Container>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport \"./Orientation.css\";\nimport { HStack, VStack } from \"@chakra-ui/react\";\n\nexport default function SummaryWrapper({ children }) {\n  return (\n    <>\n      <HStack spacing={[8, 12, 16, 24]} w=\"full\" id=\"hstack\">\n        {children}\n      </HStack>\n      <VStack spacing={[4, 6, 8, 12]} w=\"full\" id=\"vstack\">\n        {children}\n      </VStack>\n    </>\n  );\n}\n","import React from \"react\";\nimport {\n  Image,\n  Container,\n  Center,\n  Button,\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport SummaryWrapper from \"./SummaryWrapper\";\n\nexport default function Bio({ img, children }) {\n  return (\n    <Container m={[2, 4, 6, 8]} w=\"full\" maxW=\"100%\">\n      <Flex>\n        <SummaryWrapper>\n          <Image\n            borderRadius=\"full\"\n            boxSize={[100, 125, 150, 200]}\n            src={img}\n            alt=\"Profile/Summary Picture\"\n          />\n          {children}\n        </SummaryWrapper>\n      </Flex>\n    </Container>\n  );\n}\n//and of course its components like HStack and VStack that gives a mobile dev styling feel and the highly customizable responsive design it provides.\n","export const PRESENT = \"Present\";\n\nexport const RESEARCH = \"Research\";\n\nexport const PYTHON = \"Python\";\n\nexport const JS = \"JavaScript\";\n\nexport const REACT = \"ReactJS\";\n\nexport const HTML = \"HTML/CSS\";\n\nexport const NEXT = \"Next.js\";\n\nexport const RUBY = \"Ruby\";\n\nexport const RUBY_ON_RAILS = \"Ruby on Rails\";\n\nexport const ANGULARJS = \"AngularJS\";\n\nexport const JAVA = \"Java\";\n\nexport const ORACLE = \"Oracle DB\";\n\nexport const COSMOS = \"Azure Cosmos DB\";\n\nexport const ML = \"Machine Learning\";\n\nexport const PHP = \"PHP\";\n\nexport const CV = \"Computer Vision\";\n\nexport const OPENCV = \"Opencv\";\n\nexport const CPP = \"C++\";\n\nexport const AGILE = \"Agile\";\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { Image, VStack, Text } from \"@chakra-ui/react\";\nimport { PRESENT } from \"../../Constants\";\n\nexport default function PostSummary({\n  hovering,\n  title,\n  startDate,\n  endDate,\n  img,\n}) {\n  if (!hovering) {\n    return (\n      <Image\n        m={0}\n        src={img}\n        alt={`Image for post ${title}`}\n        w=\"100%\"\n        maxH=\"100%\"\n      />\n    );\n  }\n  return (\n    <VStack>\n      <Text fontSize=\"xl\" maxW=\"100%\">\n        {title}\n      </Text>\n      <Text fontSize=\"xl\" maxW=\"100%\">\n        <Moment parse=\"MM-YYYY\" format=\"MMM YYYY\">\n          {startDate}\n        </Moment>\n        {endDate === \"\" ? null : (\n          <>\n            <span> ~ </span>\n            {endDate === PRESENT ? (\n              PRESENT\n            ) : (\n              <Moment parse=\"MM-YYYY\" format=\"MMM YYYY\">\n                {endDate}\n              </Moment>\n            )}\n          </>\n        )}\n      </Text>\n    </VStack>\n  );\n}\n","import React, { useState } from \"react\";\nimport { AspectRatio, Button } from \"@chakra-ui/react\";\n\nimport PostSummary from \"./PostSummary\";\n\nexport default function Post({ content, action }) {\n  const [hovering, setHovering] = useState(false);\n  const onHover = () => {\n    setHovering(true);\n  };\n  const onLeave = () => {\n    setHovering(false);\n  };\n  return (\n    <AspectRatio ratio={1}>\n      <Button\n        p={0}\n        height=\"80px\"\n        onClick={() => action(content)}\n        onMouseEnter={onHover}\n        onMouseLeave={onLeave}\n        style={{\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        <PostSummary\n          hovering={hovering}\n          title={content.title}\n          startDate={content.startDate}\n          endDate={content.endDate}\n          img={content.imgs[0]}\n        />\n      </Button>\n    </AspectRatio>\n  );\n}\n","import { PRESENT } from \"./Constants\";\nexport function initializePostObj(obj, folder) {\n  obj.forEach((post) => {\n    post.liked = false;\n    post.imgs.forEach(\n      (url, i, self) => (self[i] = process.env.PUBLIC_URL + folder + url)\n    );\n    post.tags.forEach(\n      (tag, i, self) => (self[i] = tag.replace(\" \", \"_\").toLowerCase())\n    );\n  });\n}\n\nexport function compareDates(a, b) {\n  const a_priority = \"priority\" in a ? a.priority : 0;\n  const b_priority = \"priority\" in b ? b.priority : 0;\n  if (a_priority !== b_priority) {\n    return a_priority < b_priority;\n  }\n  let moment = require(\"moment\");\n  let a_date = a.endDate === \"\" ? a.startDate : a.endDate;\n  let b_date = b.endDate === \"\" ? b.startDate : b.endDate;\n\n  if (a_date === PRESENT) {\n    if (b_date === PRESENT) {\n      a_date = a.startDate;\n      b_date = b.startDate;\n    } else {\n      return false;\n    }\n  } else if (b_date === PRESENT && a_date !== PRESENT) {\n    return true;\n  }\n\n  const a_moment_object = moment(a_date, \"MM-YYYY\");\n  const b_moment_object = moment(b_date, \"MM-YYYY\");\n\n  if (moment(a_moment_object).isSame(b_moment_object, \"month\")) {\n    return a.title < b.title;\n  } else if (moment(a_moment_object).isBefore(b_moment_object, \"month\")) {\n    return true;\n  }\n}\n\nexport function onGoing() {\n  let moment = require(\"moment\");\n  return moment().format(\"MM-YYYY\");\n}\n","import React from \"react\";\nimport { Text, useColorModeValue } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HashTag({ text }) {\n  const root = process.env.PUBLIC_URL;\n\n  const color = useColorModeValue(\"rgb(0, 55, 107)\", \"rgb(118, 176, 231)\");\n  return (\n    <Link to={`/tags/${text}`}>\n      <Text\n        mx={1}\n        fontSize=\"sm\"\n        color={color}\n        style={{ display: \"inline-block\" }}\n      >\n        #{text}\n      </Text>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport ImageGallery from \"react-image-gallery\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport default function PostImage({ imgs, onDoubleClick }) {\n  const imagesObj = imgs.map((img) => {\n    return {\n      original: img,\n    };\n  });\n  console.log(imagesObj);\n  const settings = {\n    showBullets: true,\n    onErrorImageURL: process.env.PUBLIC_URL + \"/notfound.jpeg\",\n    showPlayButton: false,\n    showFullscreenButton: false,\n  };\n  console.log(imagesObj);\n  return (\n    <Box id=\"gallery wrapper\" w=\"100%\" onDoubleClick={onDoubleClick}>\n      <ImageGallery items={imagesObj} {...settings} />\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport Moment from \"react-moment\";\nimport {\n  Box,\n  Center,\n  Flex,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalContent,\n  ModalBody,\n  VStack,\n  Text,\n  Heading,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { IconContext } from \"react-icons\";\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\nimport { FiSend } from \"react-icons/fi\";\nimport { onGoing } from \"../../Utility\";\nimport { PRESENT } from \"../../Constants\";\nimport HashTag from \"./HashTag\";\nimport PostImage from \"./PostImage\";\n\nexport default function PostDetail({ content }) {\n  const { title, subtitle, description, imgs, startDate, endDate, tags } =\n    content;\n  const [liked, setLiked] = useState(content.liked);\n\n  const color = useColorModeValue(\"black\", \"white\");\n  const backcolor = useColorModeValue(\"gray.50\", \"rgb(26, 32, 44)\");\n\n  const toggleLiked = () => {\n    setLiked(!liked);\n    content.liked = !liked;\n  };\n\n  const doubleClickLike = () => {\n    setLiked(true);\n    content.liked = true;\n  };\n\n  const shareButton = () => {\n    window.alert(`ooops. this is embarrasing...\n    I'm still thinking about what feature to do with the share button`);\n  };\n\n  const heart_color = \"237,73,86\";\n  return (\n    <>\n      <ModalOverlay />\n      <ModalContent m={15} height=\"80vh\">\n        <Box h=\"100%\" bg=\"black\">\n          <Flex h=\"100%\" w=\"100%\">\n            <Center flex=\"1\" maxH=\"100%\" maxW=\"100%\" w=\"100%\">\n              <PostImage imgs={imgs} onDoubleClick={() => doubleClickLike()} />\n            </Center>\n            <Box h=\"100%\" maxW=\"500px\" width=\"45%\" bg={backcolor}>\n              <ModalCloseButton />\n              <VStack h=\"100%\">\n                <Box width=\"100%\">\n                  <Heading\n                    as=\"h4\"\n                    size=\"md\"\n                    justifyContent=\"flex-start\"\n                    mt={3}\n                    mx={4}\n                  >\n                    {title}\n                  </Heading>\n                  <Heading\n                    as=\"h4\"\n                    size=\"sm\"\n                    justifyContent=\"flex-start\"\n                    mb={1}\n                    mx={4}\n                  >\n                    {subtitle}\n                  </Heading>\n                  <hr />\n                </Box>\n                <ModalBody\n                  w=\"100%\"\n                  textAlign={\"left\"}\n                  style={{ whiteSpace: \"pre-wrap\" }}\n                >\n                  {description}\n                </ModalBody>\n                <Box px={2} w=\"100%\" justifyContent=\"flex-start\">\n                  {tags.map((tag, i) => (\n                    <HashTag text={tag} key={i} />\n                  ))}\n                </Box>\n                <Box h=\"90px\" w=\"100%\">\n                  <hr />\n                  <VStack w=\"100%\" px={2}>\n                    <Box m={0} w=\"100%\" justifyContent=\"flex-start\">\n                      <IconContext.Provider\n                        value={{\n                          color: liked ? `rgb(${heart_color})` : color,\n                          className: \"global-class-name\",\n                          size: \"22px\",\n                        }}\n                      >\n                        <Box d=\"inline-block\" m={1} mb={0}>\n                          {liked ? (\n                            <FaHeart onClick={() => toggleLiked()} />\n                          ) : (\n                            <FaRegHeart onClick={() => toggleLiked()} />\n                          )}\n                        </Box>\n                      </IconContext.Provider>\n                      <IconContext.Provider\n                        value={{\n                          className: \"global-class-name\",\n                          size: \"22px\",\n                        }}\n                      >\n                        <Box d=\"inline-block\" m={1} mb={0}>\n                          <FiSend onClick={() => shareButton()} />\n                        </Box>\n                      </IconContext.Provider>\n                    </Box>\n                    <Text\n                      fontSize=\"sm\"\n                      w=\"100%\"\n                      justifyContent=\"flex-start\"\n                      style={{\n                        fontWeight: \"bold\",\n                        marginTop: \"0px\",\n                        padding: \"0px 5px\",\n                      }}\n                    >\n                      &#8501; {liked ? \" + 1\" : \"\"} likes\n                    </Text>\n                    <Text\n                      fontSize=\"xs\"\n                      w=\"100%\"\n                      justifyContent=\"flex-start\"\n                      style={{\n                        marginTop: \"-2px\",\n                        textTransform: \"uppercase\",\n                        fontFamily: \"system-ui, Courier New\",\n                        color: \"#8E8E8E\",\n                        padding: \"0px 5px\",\n                      }}\n                    >\n                      <Moment parse=\"MM-YYYY\" format=\"MMMM YYYY\">\n                        {startDate}\n                      </Moment>\n                      {endDate === \"\" ? null : (\n                        <>\n                          <span> (Last Updated </span>\n                          <Moment parse=\"MM-YYYY\" format=\"MMMM YYYY\">\n                            {endDate === PRESENT ? onGoing() : endDate}\n                          </Moment>\n                          )\n                        </>\n                      )}\n                    </Text>\n                  </VStack>\n                </Box>\n              </VStack>\n            </Box>\n          </Flex>\n        </Box>\n      </ModalContent>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SimpleGrid, Modal, useDisclosure } from \"@chakra-ui/react\";\nimport Post from \"./Post\";\nimport PostDetail from \"./PostDetail\";\n\nconst postNotFound = {\n  title: \"Post not found\",\n  description: \"Something wrong happened :(\",\n  img: \"/notfound.jpeg\",\n  date: \"12-2001\",\n  updated: false,\n};\n\nexport default function Gallery({ contents }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [currentPost, setCurrentPost] = useState(postNotFound);\n\n  const clickPost = (content) => {\n    setCurrentPost(content);\n    onOpen();\n  };\n  return (\n    <>\n      <Modal\n        onClose={onClose}\n        size={\"5xl\"}\n        isOpen={isOpen}\n        scrollBehavior=\"inside\"\n        isCentered\n      >\n        <PostDetail content={currentPost} />\n      </Modal>\n      <SimpleGrid columns={[2, null, 3]} spacing=\"5%\">\n        {contents.map((content, i) => (\n          <Post content={content} action={clickPost} key={i} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, initializePostObj } from \"../Utility\";\nimport {\n  PRESENT,\n  RESEARCH,\n  PYTHON,\n  JS,\n  REACT,\n  PHP,\n  HTML,\n  NEXT,\n  RUBY,\n  RUBY_ON_RAILS,\n  ANGULARJS,\n  JAVA,\n  ORACLE,\n  COSMOS,\n  ML,\n  CV,\n  OPENCV,\n  CPP,\n} from \"../Constants\";\n\nexport const projects = [\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    imgs: [\"sudoku.png\"],\n    startDate: \"07-2020\",\n    endDate: \"\",\n    tags: [JS, HTML, \"Backtracking\", \"Bit Manupulation\"],\n  },\n  {\n    title: \"Game Website\",\n    description: \"its a game website\",\n    imgs: [\"spaceinvader.png\", \"flappyabe.png\", \"tetris.png\"],\n    startDate: \"08-2020\",\n    endDate: \"\",\n    tags: [JS, HTML, PHP],\n  },\n  {\n    title: \"Table Recognizer\",\n    description: \"its a table recognizer\",\n    imgs: [\"tablegrid.png\", \"tablecell.png\"],\n    startDate: \"03-2021\",\n    endDate: \"\",\n    tags: [PYTHON, OPENCV, CV, ML, \"Swimming\"],\n  },\n  {\n    title: \"Piazza Post Classifier\",\n    description: \"its a sudoku website <- lol its not  \",\n    imgs: [\"piazza.jpeg\"],\n    startDate: \"03-2020\",\n    endDate: \"\",\n    tags: [CPP, ML],\n  },\n  {\n    title: \"Dog Breed Classification\",\n    description:\n      \"Classify dog breeds. Transfer learning..... 74% accuracy and 0.863 AUROC todo\",\n    imgs: [\"dogs.png\"],\n    startDate: \"04-2021\",\n    endDate: \"\",\n    tags: [\"CNN\", ML, \"Transfer Learning\"],\n  },\n];\n\nprojects.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\ninitializePostObj(projects, \"/ProjectImg/\");\n\nexport default function Project() {\n  return <Gallery contents={projects} />;\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, initializePostObj } from \"../Utility\";\nimport {\n  PRESENT,\n  RESEARCH,\n  PYTHON,\n  JS,\n  REACT,\n  PHP,\n  HTML,\n  NEXT,\n  RUBY,\n  RUBY_ON_RAILS,\n  ANGULARJS,\n  JAVA,\n  ORACLE,\n  COSMOS,\n  AGILE,\n} from \"../Constants\";\n\nexport const experiences = [\n  {\n    title: \"University of Michigan\",\n    subtitle: \"EECS 203 (Discrete Math) Instructional Aide / GSI\",\n    description:\n      \"\\tAs an Instructional Aide for EECS 203, I work on variety on tasks to both directly and indirectly support student learning. I directly support students by answering questions on piazza (a Q&A forum), answer questions during online zoom lecture, and hold weekly office hours and discussion sections for students to review and practice with lecture material. Indirectly, I write and review homework and exam questions, and I worked as the lead for the exam management team where I set detailed timeline for each exam, allocate staffs for proctoring the exam, and ensuring exam question writing and grading goes smoothly.\\n\\tI have always loved math and teaching, and this was the perfect combination of both. The amount of responsibility as an Instructional Aide that is not directly teaching was overwhelming at first, but as a student myself, I started to notice how important getting these tasks correct is imporant. Every semester, there's always homework and exam questions with issues that are obviously not proof read/tested and is always stressful especially in an exam setting. Since realizing how important it is to make sure these errors don't occur, it has been a crucial responsibility for me as an instructional aide. Starting Fall 2021, I started sharing my knowledge managing the exam logistics with staffs from other courses in effort to streamline the student experiences during the stressful exam time overall.\",\n    imgs: [\"m.png\"],\n    startDate: \"08-2020\",\n    endDate: PRESENT,\n    tags: [\n      \"Instructional Aide\",\n      \"Management\",\n      \"Discrete Math\",\n      \"Logic\",\n      \"Counting\",\n    ],\n    priority: -1,\n  },\n  {\n    title: \"University of Michigan\",\n    subtitle: \"Research Assistant\",\n    description:\n      \"I assisted in researching how the newspaper paywall effects the content and frequency of digital articles published. We tried seeing trend of the newspaper by topic (sports, politics, etc.), census region, city demographics (like average income and population). I researched data and performed topic modelling techniques like LDA and GloVe to assist in this process.\",\n    imgs: [\"m.png\"],\n    startDate: \"12-2021\",\n    endDate: PRESENT,\n    tags: [RESEARCH, PYTHON, \"Topic Modelling\", \"LDA\", \"GloVe\"],\n    priority: -1,\n  },\n  {\n    title: \"PID Inc.\",\n    subtitle: \"Full Stack Intern\",\n    description:\n      \"I actually started this internship as just a front-end developer intern. I was given a project that would be worked on with my mentor and another intern who would of have worked on the back-end. However, the other intern quit a month into the internship due to his high school workload so I volunteered to work on the back-end as well, getting somewhat promoted (?) to a full-stack developer. I worked on developing a management system using React and Laravel that replaces an existing excel file that automates data entry, calculations, and visualizations. \\n\\t Working on more than 30 different web pages made me understand just how important code reusability is important. Especially in a web application setting where I have to keep styles consistent across pages. I made sure to utilize everything that was reused across different pages including, data entry and verification, pagination, and filter feature. In order to do so, I learned how to make functions and React Component as generic as I can without overcomplicating it so that I can utilize them in as many different settings as I can.\",\n    imgs: [\"pid.jpeg\"],\n    startDate: \"09-2020\",\n    endDate: \"08-2021\",\n    tags: [REACT, JS, \"Laravel\", PHP],\n  },\n  {\n    title: \"Cookpad\",\n    subtitle: \"Software Engineer Intern\",\n    description:\n      \"\\tI worked on integrating SWR React on their main service website to cache API requests to 'My Folder'. This change reduced load time from around seconds to 2 milliseconds. \" +\n      \"Further, I had the opportunity to assist with their new MVP by developing web applications using Next.js and Ruby on Rails with GraphQL API.\" +\n      \"\\n\\tThis was the my first time using GraphQL and I absolutely loved the flexibility it provides. I remember in my previous internship at PID Inc. I remember having to create a different API endpoint for every data to prevent over-fetching. This of course comes with multiple files to implement for each endpoint like the Controller, Service, and DAO. For GraphQL, once the server side was implemented, it felt like as if the client-side could reach into the database to access whatever data it needs with a bonus feature of validation and type checking built in to the request.\",\n    imgs: [\"cookpad.jpeg\"],\n    startDate: \"08-2021\",\n    endDate: \"08-2021\",\n    tags: [JS, HTML, REACT, NEXT, RUBY, RUBY_ON_RAILS],\n  },\n  {\n    title: \"Nortonlifelock\",\n    subtitle: \"Software Engineer Intern\",\n    description:\n      \"\\tI was placed on the Norton Communication Platform team where I worked on a platform agnostic communication messaging platform that is used to target end users for security news, product updates, product cross-sells, and more. I had the opportunity to particupate in their the agile iterative approach using Jira, utilizing Maven, Jenkins for unit and integration testing, along with Bitbucket and git for source management to deliver features quickly and with high quality.\\n\\tAs funny as it may sound, the most valuable skill I think I have acquired from this internship is probably reading code. Never thought this is something that need to be learned, but when there are hundreds of files in the code base, figuring out which file to look at, navigating through numerous number of files so that I can understand what a singular function does was not a skill I had going into this internship. \\n\\tOf course, the various languages and framework I was able to learn and interact with has also been a great experience for me. For the front-end, I provided new features to the GUI using Javascript + AngularJS to help our Customer Retention Management team intelligently configure messaging campaigns to select end-users for Nortonlifelock products. For the back-end, I implemented REST APIs through Java, interacting with the Oracle and Azure Cosmos Databases. Participated in Agile iterative approach using Jira while utilizing Maven, Jenkins for unit and integration testing, along with Bitbucket and git for source management to deliver features quickly and with high quality.\",\n    imgs: [\"norton.png\"],\n    startDate: \"05-2022\",\n    endDate: \"08-2022\",\n    tags: [\n      JS,\n      ANGULARJS,\n      JAVA,\n      ORACLE,\n      COSMOS,\n      HTML,\n      AGILE,\n      \"Bitbucket\",\n      \"Maven\",\n      \"Jenkins\",\n    ],\n  },\n];\n\nexperiences.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\ninitializePostObj(experiences, \"/ExperienceImg/\");\n\nexport default function Project() {\n  return <Gallery contents={experiences} />;\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, PRESENT, initializePostObj } from \"../Utility\";\n\nexport const others = [];\n\nothers.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\ninitializePostObj(others, \"/OtherImg/\");\n\nexport default function Other() {\n  return <Gallery contents={others} />;\n}\n","import React from \"react\";\nimport {\n  Image,\n  Container,\n  Center,\n  Button,\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport Summary from \"./Summary\";\nimport { projects } from \"../Project\";\nimport { experiences } from \"../Experience\";\nimport { others } from \"../Other\";\n\nexport default function Bio() {\n  let moment = require(\"moment\");\n  const bday = moment(\"2001-12-30\", \"YYYY-MM-DD\");\n  const today = moment().startOf(\"day\");\n\n  const daysOld = Math.round(moment.duration(today.diff(bday)).asDays());\n  const numPosts = projects.length + experiences.length + others.length;\n  return (\n    <Summary img={process.env.PUBLIC_URL + \"/pfp.jpg\"}>\n      <VStack w=\"full\" align=\"flex-start\">\n        <HStack spacing={[3, 4, 5]}>\n          <Text as=\"span\" fontSize=\"2xl\">\n            Xiangyu (Tom) Qin\n          </Text>\n          <Center>\n            <Link to=\"/resume.pdf\" target=\"_blank\">\n              <Button borderRadius=\"sm\" bg=\"blue.500\" color=\"white\" size=\"xs\">\n                Resume\n              </Button>\n            </Link>\n          </Center>\n        </HStack>\n        <SimpleGrid\n          w=\"full\"\n          maxW=\"40em\"\n          columns={[1, null, 3]}\n          spacing={[1, 2, 3]}\n        >\n          <Text as=\"span\">\n            <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n              {numPosts}\n            </Text>{\" \"}\n            posts\n          </Text>\n          <Text as=\"span\">\n            <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n              {daysOld}\n            </Text>{\" \"}\n            days old\n          </Text>\n        </SimpleGrid>\n        <Text>\n          Hi there! I'm Tom, a first year masters student in Computer Science at\n          the University of Michigan.\n        </Text>\n        <Text>\n          Outside of work and academics, you'll likely find me Swimming, Working\n          on a Jigsaw Puzzle, Cooking, or Travelling. I've been to 19 countries\n          and my favourite part about travelling has always been the food.\n        </Text>\n      </VStack>\n    </Summary>\n  );\n}\n\n//and of course its components like HStack and VStack that gives a mobile dev styling feel and the highly customizable responsive design it provides.\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/react\";\nimport { useLocation } from 'react-router-dom'\n\nexport default function Option({to, text}) {\n    const location = useLocation();\n    \n    const currentPage = location.pathname === to;\n\n    return (\n        <>\n        {currentPage ? (\n            <Box borderTop='1px' borderColor='black'>\n                <Link to={to}>\n                    <Box component=\"span\">{text}</Box>\n                </Link>\n            </Box>\n        ) : (\n            <Box color=\"gray.500\">\n                <Link to={to}>\n                    <Box component=\"span\">{text}</Box>\n                </Link>\n            </Box>\n        )}\n        </>\n    )\n}\n","import React from \"react\";\nimport { Container, Center, HStack } from \"@chakra-ui/react\";\nimport Option from \"./Option\";\n\nexport default function Tabs() {\n  return (\n    <Container maxW=\"44em\" mb={3}>\n      <Center>\n        <HStack spacing={12}>\n          <Option to=\"/\" text=\"Experience\" />\n          <Option to=\"/project\" text=\"Project\" />\n          {/* <Option to=\"/courses\" text=\"Courses\" /> */}\n          {/* <Option to=\"/other\" text=\"Other\" /> */}\n        </HStack>\n      </Center>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Container } from \"@chakra-ui/react\";\nimport Bio from \"./Summary/Bio\";\nimport Tabs from \"./Tabs/Tabs\";\n\nfunction MainRoute({ component: Component, audience, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Container maxW=\"100%\">\n          <Bio />\n          <hr />\n          <Tabs />\n          <div id=\"posts\">\n            <Component {...props} />\n          </div>\n        </Container>\n      )}\n    />\n  );\n}\n\nexport default MainRoute;\n","import \"react-image-gallery/styles/css/image-gallery.css\";\nimport React, { Component } from 'react';\nimport ImageGallery from 'react-image-gallery';\n\nconst images = [\n  {\n    original: 'https://picsum.photos/id/1018/1000/600/',\n  },\n  {\n    original: 'https://picsum.photos/id/1015/1000/600/',\n  },\n  {\n    original: 'https://picsum.photos/id/1019/1000/600/',\n  },\n];\n\nexport default class MyGallery extends React.Component {\n  render() {\n    return <ImageGallery items={images} />;\n  }\n}","import React from \"react\";\nimport {\n  Image,\n  Container,\n  Center,\n  Button,\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport Summary from \"./Summary\";\n\nexport default function TagSummary({ img, tagname, numPosts }) {\n  if (img == null) return null;\n  return (\n    <Summary img={img}>\n      <VStack w=\"full\" align=\"flex-start\">\n        <Text as=\"span\" fontSize=\"2xl\">\n          &#35;{tagname}\n        </Text>\n        <Text as=\"span\">\n          <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n            {numPosts}\n          </Text>{\" \"}\n          posts\n        </Text>\n      </VStack>\n    </Summary>\n  );\n}\n\n//and of course its components like HStack and VStack that gives a mobile dev styling feel and the highly customizable responsive design it provides.\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { projects } from \"./Project\";\nimport { experiences } from \"./Experience\";\nimport { others } from \"./Other\";\nimport { compareDates } from \"../Utility\";\nimport Gallery from \"./Posts/Gallery\";\nimport { Container } from \"@chakra-ui/react\";\nimport TagSummary from \"./Summary/TagSummary\";\nimport Tabs from \"./Tabs/Tabs\";\n\nexport default function Tags() {\n  const { tagname } = useParams();\n  const [posts, setPosts] = useState(null);\n  const [img, setImg] = useState(null);\n\n  useEffect(() => {\n    const pages = [projects, experiences, others];\n    let arr = [];\n    pages.forEach((obj) => {\n      const filtered = obj.filter((post) => post.tags.includes(tagname));\n      arr = arr.concat(filtered);\n    });\n    arr.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n    setPosts(arr);\n    console.log(arr);\n    if (arr.length > 0) setImg(arr[0].imgs[0]);\n  }, []);\n\n  console.log(img);\n\n  if (posts == null) return null;\n\n  if (posts.length === 0) {\n    return <div> Oops no post matching &#35;{tagname} found</div>;\n  }\n\n  return (\n    <Container maxW=\"100%\">\n      <TagSummary tagname={tagname} img={img} numPosts={posts.length} />\n      <hr />\n      <div id=\"posts\">\n        <Gallery contents={posts} />\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MainRoute from \"./MainRoute\";\nimport Project from \"./Project\";\nimport Experience from \"./Experience\";\nimport Other from \"./Other\";\nimport Courses from \"./Courses\";\nimport Tags from \"./Tags\";\n\nimport { Container, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction App() {\n  const backcolor = useColorModeValue(\"gray.50\", \"rgb(26, 32, 44)\");\n  return (\n    <>\n      <Header />\n      <Container bg={backcolor} maxW=\"100%\" mx=\"auto\" p={0}>\n        <hr />\n        <Container maxW=\"62em\" mx=\"auto\">\n          <Switch>\n            <MainRoute path={\"/\"} exact component={Experience} />\n            <MainRoute path={\"/project\"} exact component={Project} />\n            {/* <MainRoute path={`${root}/courses`} exact component={Courses} /> */}\n            {/* <MainRoute path={\"/other\"} exact component={Other} /> */}\n            <Route path={\"/tags/:tagname\"} component={Tags} />\n          </Switch>\n        </Container>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n};\n\n// #FFFAFA\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ChakraProvider>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}