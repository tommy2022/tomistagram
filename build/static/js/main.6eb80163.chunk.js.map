{"version":3,"sources":["components/Header/DarkModeButton.js","components/Header/Header.js","components/Bio/BioWrapper.js","components/Bio/Bio.js","components/Tabs/Option.js","components/Tabs/Tabs.js","components/MainRoute.js","utility.js","components/Posts/PostSummary.js","components/Posts/Post.js","components/Posts/HashTag.js","components/Posts/PostDetail.js","components/Posts/Gallery.js","components/Project.js","components/Experience.js","components/Other.js","components/Courses.js","components/Tags.js","components/App.js","theme.js","index.js"],"names":["DarkModeButton","useColorMode","colorMode","toggleColorMode","buttonBackground","useColorModeValue","iconBackground","isEnabled","label","className","htmlFor","style","background","color","id","onClick","Header","maincolor","bg","w","maxW","mx","p","to","root","textDecoration","size","fontFamily","fontSize","h","window","alert","justify","href","alt","BioWrapper","children","spacing","Bio","moment","require","bday","today","startOf","daysOld","duration","diff","asDays","m","borderRadius","boxSize","src","process","align","as","columns","fontWeight","Option","text","currentPage","useLocation","pathname","borderTop","borderColor","component","Tabs","mb","MainRoute","Component","rest","audience","render","props","compareDates","a","b","a_date","endDate","startDate","b_date","PRESENT","a_moment_object","b_moment_object","isBefore","PostSummary","hovering","title","img","parse","format","Post","content","action","useState","setHovering","ratio","height","onMouseEnter","onMouseLeave","whiteSpace","wordWrap","HashTag","replace","display","PostDetail","description","tags","liked","setLiked","toggleLiked","flex","maxH","onDoubleClick","width","justifyContent","my","textAlign","px","map","tag","i","Provider","value","d","marginTop","padding","textTransform","postNotFound","date","updated","Gallery","contents","useDisclosure","isOpen","onOpen","onClose","currentPost","setCurrentPost","clickPost","scrollBehavior","isCentered","projects","Project","sort","forEach","post","Experience","Other","Courses","Tags","tagname","useParams","App","backcolor","path","exact","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb80163.chunk.js","sourcesContent":["import React from \"react\";\nimport { useColorMode, useColorModeValue, Tooltip } from \"@chakra-ui/react\";\nimport { SunIcon, MoonIcon } from \"@chakra-ui/icons\";\nimport \"./DarkModeButton.css\";\n\nexport default function DarkModeButton() {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const buttonBackground = useColorModeValue(\"black\", \"white\");\n  const iconBackground = useColorModeValue(\"white\", \"black\");\n\n  const isEnabled = colorMode === \"dark\";\n  return (\n    <Tooltip label=\"Toggle Dark Mode\">\n      <label className=\"toggle-wrapper\" htmlFor=\"toggle\">\n        <div\n          className={`toggle ${isEnabled ? \"enabled\" : \"disabled\"}`}\n          style={{ background: buttonBackground }}\n        >\n          <div className=\"icons\">\n            <MoonIcon color={iconBackground} />\n            <SunIcon color={iconBackground} />\n          </div>\n          <input id=\"toggle\" onClick={toggleColorMode} />\n        </div>\n      </label>\n    </Tooltip>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Heading,\n  Container,\n  HStack,\n  Center,\n  Flex,\n  Spacer,\n  Box,\n  useColorModeValue,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { EmailIcon } from \"@chakra-ui/icons\";\nimport DarkModeButton from \"./DarkModeButton\";\n\nexport default function Header() {\n  const title = {\n    fontFamily: \"Brush Script MT, Comic Sans\",\n    fontSize: \"30px\",\n  };\n\n  const maincolor = useColorModeValue(\"white\", \"rgb(23, 29, 42)\");\n\n  const root = process.env.PUBLIC_URL;\n\n  return (\n    <Container bg={maincolor} w=\"100%\" maxW=\"100%\">\n      <Container maxW=\"62em\" mx=\"auto\" p={1}>\n        <Flex>\n          <Box p=\"2\" w=\"100%\">\n            <Link to={root + \"/\"} style={{ textDecoration: \"none\" }}>\n              <Heading size=\"md\" style={title}>\n                Tomistagram\n              </Heading>\n            </Link>\n          </Box>\n          <Spacer />\n          <Box w=\"100%\">\n            <Center h=\"100%\">\n              <Heading\n                fontSize={[\"xl\", \"2xl\", \"3xl\"]}\n                onClick={() => window.alert(\"Work in progress. Coming soon\")}\n              >\n                Search Bar\n              </Heading>\n            </Center>\n          </Box>\n          <Spacer />\n          <Box w=\"100%\">\n            <HStack h=\"100%\" justify=\"flex-end\">\n              <Tooltip label=\"qinx@umich.edu\">\n                <a href=\"mailto:qinx@umich.edu\">\n                  <EmailIcon alt=\"email icon\" w={10} h=\"25px\" />\n                </a>\n              </Tooltip>\n              <DarkModeButton />\n            </HStack>\n          </Box>\n        </Flex>\n      </Container>\n    </Container>\n  );\n}\n","import React from 'react';\nimport './Orientation.css';\nimport { HStack, VStack } from \"@chakra-ui/react\";\n\nexport default function BioWrapper({children}) {\n    return (\n        <>\n        <HStack spacing={[8, 12, 16, 24]} w=\"full\" id=\"hstack\">\n            {children}\n        </HStack>\n        <VStack spacing={[4, 6, 8, 12]} w=\"full\" id=\"vstack\">\n            {children}\n        </VStack>\n        </>\n    )\n}\n","import React from \"react\";\nimport {\n  Image,\n  Container,\n  Center,\n  Button,\n  HStack,\n  VStack,\n  Text,\n  Flex,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport BioWrapper from \"./BioWrapper\";\n\nexport default function Bio() {\n  let moment = require(\"moment\");\n  const bday = moment(\"2001-12-30\", \"YYYY-MM-DD\");\n  const today = moment().startOf(\"day\");\n\n  const daysOld = moment.duration(today.diff(bday)).asDays();\n\n  return (\n    <Container m={[2, 4, 6, 8]} w=\"full\" maxW=\"100%\">\n      <Flex>\n        <BioWrapper>\n          <Image\n            borderRadius=\"full\"\n            boxSize={[100, 125, 150, 200]}\n            src={process.env.PUBLIC_URL + \"/pfp.jpg\"}\n            alt=\"Profile Picture\"\n          />\n          <VStack w=\"full\" align=\"flex-start\">\n            <HStack spacing={[3, 4, 5]}>\n              <Text as=\"span\" fontSize=\"2xl\">\n                Xiangyu (Tom) Qin\n              </Text>\n              <Center>\n                <Button borderRadius=\"sm\" bg=\"blue.500\" color=\"white\" size=\"xs\">\n                  Resume\n                </Button>\n              </Center>\n            </HStack>\n            <SimpleGrid\n              w=\"full\"\n              maxW=\"30em\"\n              columns={[1, null, 3]}\n              spacing={[1, 2, 3]}\n            >\n              <Text as=\"span\">\n                <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n                  {daysOld}\n                </Text>{\" \"}\n                days old\n              </Text>\n              <Text as=\"span\">\n                <Text as=\"span\" style={{ fontWeight: \"bold\" }}>\n                  57\n                </Text>{\" \"}\n                animes watched\n              </Text>\n            </SimpleGrid>\n            <Text>\n              I am a third-year student in Computer Science at the Unviersity of\n              Michigan. Outside of work and academics, you'll likely not find me\n              not doing any of Swimming, working on Jigsaw Puzzles, Cooking, and\n              playing Super Smash Bros. Or, if we apply De Morgan's, you will\n              probably find me Swimming &or; Jigsaw Puzzle &or; Cooking &or;\n              Super Smash Bros.\n            </Text>\n            <Text>\n              My current favorite tech stack is Chakra UI. I mean, how freakin\n              cool is it to be able to\n              <Text as=\"i\"> import Chakra. </Text>\n              (and of course its features as well, but that will be too long for\n              my short bio so I'll make a post under \"others\") And yes, this\n              website is styled using Chakra :)\n            </Text>\n          </VStack>\n        </BioWrapper>\n      </Flex>\n    </Container>\n  );\n}\n//and of course its components like HStack and VStack that gives a mobile dev styling feel and the highly customizable responsive design it provides.\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Box } from \"@chakra-ui/react\";\nimport { useLocation } from 'react-router-dom'\n\nexport default function Option({to, text}) {\n    const location = useLocation();\n\n    to = process.env.PUBLIC_URL + to;\n    \n    const currentPage = location.pathname === to;\n\n    return (\n        <>\n        {currentPage ? (\n            <Box borderTop='1px' borderColor='black'>\n                <Link to={to}>\n                    <Box component=\"span\">{text}</Box>\n                </Link>\n            </Box>\n        ) : (\n            <Box color=\"gray.500\">\n                <Link to={to}>\n                    <Box component=\"span\">{text}</Box>\n                </Link>\n            </Box>\n        )}\n        </>\n    )\n}\n","import React from \"react\";\nimport { Container, Center, HStack } from \"@chakra-ui/react\";\nimport Option from \"./Option\";\n\nexport default function Tabs() {\n  return (\n    <Container maxW=\"44em\" mb={3}>\n      <Center>\n        <HStack spacing={12}>\n          <Option to=\"/\" text=\"Project\" />\n          <Option to=\"/experience\" text=\"Experience\" />\n          <Option to=\"/courses\" text=\"Courses\" />\n          <Option to=\"/other\" text=\"Other\" />\n        </HStack>\n      </Center>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { Container } from \"@chakra-ui/react\";\nimport Bio from \"./Bio/Bio\";\nimport Tabs from \"./Tabs/Tabs\";\n\nfunction MainRoute({ component: Component, audience, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => (\n        <Container maxW=\"62em\" mx=\"auto\">\n          <Bio />\n          <hr />\n          <Tabs />\n          <div id=\"posts\">\n            <Component {...props} />\n          </div>\n        </Container>\n      )}\n    />\n  );\n}\n\nexport default MainRoute;\n","export function compareDates(a, b) {\n  let moment = require(\"moment\");\n  let a_date = a.endDate === \"\" ? a.startDate : a.endDate;\n  let b_date = b.endDate === \"\" ? b.startDate : b.endDate;\n\n  if (a_date === PRESENT) {\n    if (b_date === PRESENT) {\n      a_date = a.startDate;\n      b_date = b.startDate;\n    } else {\n      return false;\n    }\n  } else if (b_date === PRESENT && a_date !== PRESENT) {\n    return true;\n  }\n\n  const a_moment_object = moment(a_date, \"MM-YYYY\");\n  const b_moment_object = moment(b_date, \"MM-YYYY\");\n\n  return moment(a_moment_object).isBefore(b_moment_object, \"month\");\n}\n\nexport function onGoing() {\n  let moment = require(\"moment\");\n  return moment().format(\"MM-YYYY\");\n}\n\nexport const PRESENT = \"Present\";\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { Image, VStack, Text } from \"@chakra-ui/react\";\nimport { PRESENT } from \"../../utility\";\n\nexport default function PostSummary({\n  hovering,\n  title,\n  startDate,\n  endDate,\n  img,\n}) {\n  if (!hovering) {\n    return <Image m={0} src={img} alt={`Image for post ${title}`} />;\n  }\n  return (\n    <VStack>\n      <Text fontSize=\"xl\" maxW=\"100%\">\n        {title}\n      </Text>\n      <Text fontSize=\"xl\" maxW=\"100%\">\n        <Moment parse=\"MM-YYYY\" format=\"MMM YYYY\">\n          {startDate}\n        </Moment>\n        {endDate === \"\" ? null : (\n          <>\n            <span> ~ </span>\n            {endDate === PRESENT ? (\n              PRESENT\n            ) : (\n              <Moment parse=\"MM-YYYY\" format=\"MMM YYYY\">\n                {endDate}\n              </Moment>\n            )}\n          </>\n        )}\n      </Text>\n    </VStack>\n  );\n}\n","import React, { useState } from \"react\";\nimport { AspectRatio, Button } from \"@chakra-ui/react\";\n\nimport PostSummary from \"./PostSummary\";\n\nexport default function Post({ content, action }) {\n  const [hovering, setHovering] = useState(false);\n  const onHover = () => {\n    setHovering(true);\n  };\n  const onLeave = () => {\n    setHovering(false);\n  };\n  return (\n    <AspectRatio ratio={1}>\n      <Button\n        p={0}\n        height=\"80px\"\n        onClick={() => action(content)}\n        onMouseEnter={onHover}\n        onMouseLeave={onLeave}\n        style={{\n          whiteSpace: \"normal\",\n          wordWrap: \"break-word\",\n        }}\n      >\n        <PostSummary\n          hovering={hovering}\n          title={content.title}\n          startDate={content.startDate}\n          endDate={content.endDate}\n          img={content.img}\n        />\n      </Button>\n    </AspectRatio>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function HashTag({ text }) {\n  text = text.replace(\" \", \"_\");\n  const root = process.env.PUBLIC_URL;\n  return (\n    <Link to={`${root}/tags/${text}`}>\n      <Text\n        mx={1}\n        fontSize=\"sm\"\n        color=\"rgb(0, 55, 107)\"\n        style={{ display: \"inline-block\" }}\n      >\n        #{text}\n      </Text>\n    </Link>\n  );\n}\n","import React, { useState } from \"react\";\nimport Moment from \"react-moment\";\nimport {\n  Box,\n  Center,\n  Flex,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalContent,\n  ModalBody,\n  Image,\n  VStack,\n  Text,\n  Heading,\n} from \"@chakra-ui/react\";\nimport { IconContext } from \"react-icons\";\nimport { FaHeart, FaRegHeart } from \"react-icons/fa\";\nimport { FiSend } from \"react-icons/fi\";\nimport { onGoing, PRESENT } from \"../../utility\";\nimport HashTag from \"./HashTag\";\n\nexport default function PostDetail({ content }) {\n  const { title, description, img, startDate, endDate, tags } = content;\n  const [liked, setLiked] = useState(content.liked);\n\n  const toggleLiked = () => {\n    setLiked(!liked);\n    content.liked = !liked;\n  };\n\n  const doubleClickLike = () => {\n    setLiked(true);\n    content.liked = true;\n  };\n\n  const shareButton = () => {\n    window.alert(`ooops. this is embarrasing...\n    I'm still thinking about what feature to do with the share button`);\n  };\n\n  const heart_color = \"237,73,86\";\n  return (\n    <>\n      <ModalOverlay />\n      <ModalContent m={15} height=\"80vh\">\n        <Box h=\"100%\" bg=\"black\">\n          <Flex h=\"100%\" w=\"100%\">\n            <Center flex=\"1\" maxH=\"100%\">\n              <Image\n                src={img}\n                w=\"100%\"\n                onDoubleClick={() => doubleClickLike()}\n              />\n            </Center>\n            <Box h=\"100%\" maxW=\"500px\" width=\"45%\" bg=\"white\">\n              <ModalCloseButton />\n              <VStack h=\"100%\">\n                <Box h=\"49px\" width=\"100%\">\n                  <Heading\n                    as=\"h4\"\n                    size=\"md\"\n                    justifyContent=\"flex-start\"\n                    my={3}\n                    mx={6}\n                  >\n                    {title}\n                  </Heading>\n                  <hr />\n                </Box>\n                <ModalBody w=\"100%\" textAlign={\"left\"}>\n                  {description} word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word word word word\n                  word more word word word word word more word\n                </ModalBody>\n                <Box px={2} w=\"100%\" justifyContent=\"flex-start\">\n                  {tags.map((tag, i) => (\n                    <HashTag text={tag} key={i} />\n                  ))}\n                </Box>\n                <Box h=\"90px\" w=\"100%\">\n                  <hr />\n                  <VStack w=\"100%\" px={2}>\n                    <Box m={0} w=\"100%\" justifyContent=\"flex-start\">\n                      <IconContext.Provider\n                        value={{\n                          color: liked ? `rgb(${heart_color})` : \"black\",\n                          className: \"global-class-name\",\n                          size: \"22px\",\n                        }}\n                      >\n                        <Box d=\"inline-block\" m={1} mb={0}>\n                          {liked ? (\n                            <FaHeart onClick={() => toggleLiked()} />\n                          ) : (\n                            <FaRegHeart onClick={() => toggleLiked()} />\n                          )}\n                        </Box>\n                      </IconContext.Provider>\n                      <IconContext.Provider\n                        value={{\n                          className: \"global-class-name\",\n                          size: \"22px\",\n                        }}\n                      >\n                        <Box d=\"inline-block\" m={1} mb={0}>\n                          <FiSend onClick={() => shareButton()} />\n                        </Box>\n                      </IconContext.Provider>\n                    </Box>\n                    <Text\n                      fontSize=\"sm\"\n                      w=\"100%\"\n                      justifyContent=\"flex-start\"\n                      style={{\n                        fontWeight: \"bold\",\n                        marginTop: \"0px\",\n                        padding: \"0px 5px\",\n                      }}\n                    >\n                      &#8501; {liked ? \" + 1\" : \"\"} likes\n                    </Text>\n                    <Text\n                      fontSize=\"xs\"\n                      w=\"100%\"\n                      justifyContent=\"flex-start\"\n                      style={{\n                        marginTop: \"-2px\",\n                        textTransform: \"uppercase\",\n                        fontFamily: \"system-ui, Courier New\",\n                        color: \"#8E8E8E\",\n                        padding: \"0px 5px\",\n                      }}\n                    >\n                      <Moment parse=\"MM-YYYY\" format=\"MMMM YYYY\">\n                        {startDate}\n                      </Moment>\n                      {endDate === \"\" ? null : (\n                        <>\n                          <span> (Last Updated </span>\n                          <Moment parse=\"MM-YYYY\" format=\"MMMM YYYY\">\n                            {endDate === PRESENT ? onGoing() : endDate}\n                          </Moment>\n                          )\n                        </>\n                      )}\n                    </Text>\n                  </VStack>\n                </Box>\n              </VStack>\n            </Box>\n          </Flex>\n        </Box>\n      </ModalContent>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { SimpleGrid, Modal, useDisclosure } from \"@chakra-ui/react\";\nimport Post from \"./Post\";\nimport PostDetail from \"./PostDetail\";\n\nconst postNotFound = {\n  title: \"Post not found\",\n  description: \"Something wrong happened :(\",\n  img: \"/notfound.jpeg\",\n  date: \"12-2001\",\n  updated: false,\n};\n\nexport default function Gallery({ contents }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [currentPost, setCurrentPost] = useState(postNotFound);\n  // const [loaded, setLoaded] = useState(false);\n\n  // useEffect(() => {\n  //   if (loaded) return;\n  //   console.log(posts)\n  //   console.log(contents)\n  //   posts.forEach(post => {\n  //     post.liked = false;\n  //     post.img = process.env.PUBLIC_URL + post.img;\n  //   });\n  //   setLoaded(true);\n  // }, []);\n\n  const clickPost = (content) => {\n    setCurrentPost(content);\n    onOpen();\n  };\n  return (\n    <>\n      <Modal\n        onClose={onClose}\n        size={\"5xl\"}\n        isOpen={isOpen}\n        scrollBehavior=\"inside\"\n        isCentered\n      >\n        <PostDetail content={currentPost} />\n      </Modal>\n      <SimpleGrid columns={[2, null, 3]} spacing=\"5%\">\n        {contents.map((content, i) => (\n          <Post content={content} action={clickPost} key={i} />\n        ))}\n      </SimpleGrid>\n    </>\n  );\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, PRESENT } from \"../utility\";\n\nconst projects = [\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/pfp.jpg\",\n    startDate: \"01-2020\",\n    endDate: \"\",\n    tags: [\"Javascript\", \"HTML/CSS\", \"Backtracking\", \"LOL\"],\n  },\n  {\n    title: \"Piazza Post Classifier\",\n    description: \"its a sudoku website\",\n    img: \"/pfp.jpg\",\n    startDate: \"02-2021\",\n    endDate: \"\",\n    tags: [\"C++\", \"Machine Learning\"],\n  },\n  {\n    title: \"Sudoku Website feb\",\n    description: \"its a sudoku website\",\n    img: \"/pfp.jpg\",\n    startDate: \"03-2021\",\n    endDate: PRESENT,\n    tags: [\n      \"Javascript\",\n      \"HTML/CSS\",\n      \"Backtracking\",\n      \"LOL\",\n      \"Really_really_long_tag_that_requires_a_new_line\",\n    ],\n  },\n  {\n    title: \"Sudoku Website feb\",\n    description: \"its a sudoku website\",\n    img: \"/pfp.jpg\",\n    startDate: \"05-2021\",\n    endDate: \"\",\n    tags: [\"Javascript\", \"HTML/CSS\", \"Backtracking\", \"LOL\"],\n  },\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/notfound.jpeg\",\n    startDate: \"01-2021\",\n    endDate: \"06-2021\",\n    tags: [\"Javascript\", \"HTML/CSS\", \"Backtracking\", \"LOL\"],\n  },\n];\n\nprojects.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\nprojects.forEach((post) => {\n  post.liked = false;\n  post.img = process.env.PUBLIC_URL + post.img;\n});\n\nexport default function Project() {\n  return <Gallery contents={projects} />;\n}\n","import React from \"react\";\nimport Gallery from \"./Posts/Gallery\";\nimport { compareDates, PRESENT } from \"../utility\";\n\nconst projects = [\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/instagram.jpg\",\n    startDate: \"01-2020\",\n    endDate: PRESENT,\n  },\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/email.png\",\n    startDate: \"01-2021\",\n    endDate: \"\",\n  },\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/pfp.jpg\",\n    startDate: \"12-2021\",\n    endDate: PRESENT,\n  },\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/pfp.jpg\",\n    startDate: \"09-2021\",\n    endDate: \"\",\n  },\n  {\n    title: \"Sudoku Website\",\n    description: \"its a sudoku website\",\n    img: \"/notfound.jpeg\",\n    startDate: \"01-2021\",\n    endDate: \"06-2021\",\n  },\n];\n\nprojects.sort((a, b) => (compareDates(a, b) ? 1 : -1));\n\nprojects.forEach((post) => {\n  post.liked = false;\n  post.img = process.env.PUBLIC_URL + post.img;\n});\n\nexport default function Experience() {\n  return <Gallery contents={projects} />;\n}\n","import React from \"react\";\n\nexport default function Other() {\n  return <div>Other</div>;\n}\n","import React from \"react\";\n\nexport default function Courses() {\n  return <div></div>;\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Tags() {\n  const { tagname } = useParams();\n  return (\n    <div>\n      Page for {tagname} tag. Coming soon (More precisely, when I finish search\n      bar)\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MainRoute from \"./MainRoute\";\nimport Project from \"./Project\";\nimport Experience from \"./Experience\";\nimport Other from \"./Other\";\nimport Courses from \"./Courses\";\nimport Tags from \"./Tags\";\n\nimport { Container, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction App() {\n  const backcolor = useColorModeValue(\"gray.50\", \"rgb(26, 32, 44)\");\n  const root = process.env.PUBLIC_URL;\n  return (\n    <>\n      <Header />\n      <Container bg={backcolor} maxW=\"100%\" mx=\"auto\" p={0}>\n        <hr />\n        <Switch>\n          <MainRoute path={`${root}/`} exact component={Project} />\n          <MainRoute path={`${root}/experience`} exact component={Experience} />\n          <MainRoute path={`${root}/courses`} exact component={Courses} />\n          <MainRoute path={`${root}/other`} exact component={Other} />\n          <Route path={`${root}/tags/:tagname`} component={Tags} />\n        </Switch>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst config = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: true,\n};\n\n// #FFFAFA\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ChakraProvider>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </ChakraProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}